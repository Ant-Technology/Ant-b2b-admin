name: Deploy

# Trigger the workflow on push and
# pull request events on the production branch
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

# Authenticate to the the server via ssh
# and run our deployment script
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' # Only deploy when pushing to or merging pull request to 'master' or 'develop' branches
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          port: ${{ secrets.PROD_PORT }}
          key: `-----BEGIN OPENSSH PRIVATE KEY-----
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
-----END OPENSSH PRIVATE KEY-----`
          script: |
            cd b2b-admin
            if [ "${{ github.ref }}" = "refs/heads/master" ]; then
              # Deployment for master branch
              git checkout master
              git pull origin master
            elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
              # Deployment for develop branch
              git checkout develop
              git pull origin develop
            fi
            docker compose down
            docker compose build
            docker compose up -d

      - name: Send Telegram Notification
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          url=${{ secrets.PROD_HOST }}

          MESSAGE="ðŸš€ Deployment Success! ðŸš€ %0A"
          MESSAGE+="â”œ Branch: ${{ github.ref }} %0A"
          MESSAGE+="â”œ Commit Message: ${{ github.event.head_commit.message }} %0A"
          MESSAGE+="â”œ Deployed by: ${{ github.actor }}%0A"
          MESSAGE+="â”œ Date and Time: $(date +'%Y-%m-%d %H:%M:%S') %0A"
          MESSAGE+="â”” Deployment URL: $url %0A"

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" -d "chat_id=$TELEGRAM_CHAT_ID" -d "text=$MESSAGE"
